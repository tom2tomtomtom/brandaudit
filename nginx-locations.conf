# Reusable Nginx Location Blocks for AI Brand Audit Tool
# This file can be included in multiple server blocks

# Health check endpoint (nginx level)
location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# Favicon with long cache
location = /favicon.ico {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
    try_files $uri =404;
}

# Robots.txt
location = /robots.txt {
    expires 1d;
    add_header Cache-Control "public";
    access_log off;
    try_files $uri =404;
}

# Static assets with aggressive caching and optimization
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Content-Type-Options "nosniff" always;
    
    # Enable pre-compressed files
    gzip_static on;
    
    # CORS for fonts and assets
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, OPTIONS";
    add_header Access-Control-Allow-Headers "Range";
    
    # Rate limiting for static files
    limit_req zone=static burst=20 nodelay;
    
    # Optimize file serving
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Try to serve file directly, return 404 if not found
    try_files $uri =404;
    
    # Add ETag for better caching
    etag on;
}

# HTML files with short cache and security headers
location ~* \.html$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Compress HTML
    gzip on;
    gzip_types text/html;
}

# JSON files (manifests, configs)
location ~* \.json$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    add_header Content-Type application/json;
    add_header X-Content-Type-Options "nosniff" always;
}

# XML files (sitemaps, feeds)
location ~* \.xml$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    add_header Content-Type application/xml;
    add_header X-Content-Type-Options "nosniff" always;
}

# Source maps (only in development)
location ~* \.map$ {
    expires 1d;
    add_header Cache-Control "public";
    access_log off;
    
    # Only serve in development
    if ($http_host !~* "localhost|127\.0\.0\.1") {
        return 404;
    }
}

# API proxy with comprehensive optimization
location /api/ {
    # Rate limiting for API endpoints
    limit_req zone=api burst=20 nodelay;
    
    # Proxy configuration
    proxy_pass http://127.0.0.1:8000;
    proxy_http_version 1.1;
    
    # Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Timeouts optimized for brand analysis (can be long-running)
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Buffer settings for large responses
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 16 8k;
    proxy_busy_buffers_size 16k;
    proxy_temp_file_write_size 64k;
    
    # Handle large request bodies (file uploads)
    client_max_body_size 16m;
    client_body_buffer_size 128k;
    
    # Disable caching for API responses
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    
    # CORS headers for API
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
}

# WebSocket support for real-time progress updates
location /socket.io/ {
    proxy_pass http://127.0.0.1:8000;
    proxy_http_version 1.1;
    
    # WebSocket upgrade headers
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Standard proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket specific timeouts (24 hours)
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 60s;
    
    # Disable buffering for real-time communication
    proxy_buffering off;
    
    # CORS for WebSocket
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Credentials "true" always;
}

# File uploads endpoint with special handling
location /api/upload {
    # Higher limits for file uploads
    client_max_body_size 50m;
    client_body_buffer_size 1m;
    client_body_timeout 300s;
    
    # Proxy to backend
    proxy_pass http://127.0.0.1:8000;
    proxy_request_buffering off;
    proxy_http_version 1.1;
    
    # Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Extended timeouts for large uploads
    proxy_connect_timeout 60s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
}

# SPA routing - serve index.html for all non-matched routes
location / {
    try_files $uri $uri/ /index.html;
    
    # Cache settings for SPA
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CSP for SPA
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https: wss: ws:; media-src 'self'; object-src 'none'; frame-src 'none';" always;
}

# Security: Deny access to hidden files and directories
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# Security: Deny access to backup and temporary files
location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# Security: Deny access to configuration files
location ~* \.(conf|config|ini|log|bak|backup|old|tmp)$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# Security: Deny access to version control directories
location ~ /\.(git|svn|hg|bzr) {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}
